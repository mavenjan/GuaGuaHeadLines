package com.nxt.maven.guaguaheadlines.home;import android.app.Activity;import android.content.Context;import android.content.Intent;import android.support.v7.widget.GridLayoutManager;import android.support.v7.widget.RecyclerView;import android.support.v7.widget.helper.ItemTouchHelper;import android.view.View;import com.chad.library.adapter.base.BaseViewHolder;import com.nxt.maven.guaguaheadlines.R;import com.nxt.maven.guaguaheadlines.app.Constant;import com.nxt.maven.guaguaheadlines.base.BaseActivity;import com.nxt.maven.guaguaheadlines.home.adapter.ChannelAdapter;import com.nxt.maven.guaguaheadlines.listener.ItemDragHelperCallBack;import com.nxt.maven.guaguaheadlines.listener.OnChannelDragListener;import com.nxt.maven.guaguaheadlines.model.entity.Channel;import java.io.Serializable;import java.util.ArrayList;import java.util.Iterator;import java.util.List;import butterknife.BindView;import butterknife.OnClick;import static com.nxt.maven.guaguaheadlines.model.entity.Channel.TYPE_MY_CHANNEL;/** * Created by Jan Maven on 2017/8/30. * Email:cyjiang_11@163.com * Description: */public class ChannelActivity extends BaseActivity implements OnChannelDragListener {    RecyclerView mRecyclerView;    private List<Channel> mDatas = new ArrayList<>();    private ChannelAdapter mAdapter;    private final String[] titles = new String[]{"推荐", "视频", "热点", "社会", "娱乐", "科技", "汽车", "体育", "财经", "军事", "国际", "时尚", "游戏", "旅游", "历史", "探索", "美食", "育儿", "养生", "故事", "美文"};    private ItemTouchHelper mHelper;    @Override    protected Context getActivityContext() {        return this;    }    @Override    protected void initView() {        mRecyclerView = (RecyclerView) findViewById(R.id.recyclerView);        mAdapter = new ChannelAdapter(mDatas);        GridLayoutManager manager = new GridLayoutManager(this, 4);        mRecyclerView.setLayoutManager(manager);        mRecyclerView.setAdapter(mAdapter);        manager.setSpanSizeLookup(new GridLayoutManager.SpanSizeLookup() {            @Override            public int getSpanSize(int position) {                int itemViewType = mAdapter.getItemViewType(position);                return itemViewType == TYPE_MY_CHANNEL || itemViewType == Channel.TYPE_OTHER_CHANNEL ? 1 : 4;            }        });        ItemDragHelperCallBack callBack = new ItemDragHelperCallBack(this);        mHelper = new ItemTouchHelper(callBack);        mAdapter.setOnChannelDragListener(this);        //attachRecyclerView        mHelper.attachToRecyclerView(mRecyclerView);    }    @Override    protected int getLayout() {        return R.layout.activity_channel;    }    public static void start(Context context, List<Channel> list) {        start(context, list, -1);    }    public static void start(Context context, List<Channel> list, int requestCode) {        Intent intent = new Intent(context, ChannelActivity.class);        intent.putExtra(Constant.DATA, (Serializable) list);        if (context instanceof Activity) {            Activity activity = (Activity) context;            activity.startActivityForResult(intent, requestCode);        }    }    @OnClick(R.id.icon_collapse)    public void onClick(View v) {        Iterator<Channel> iterator = mDatas.iterator();        while (iterator.hasNext()) {            Channel next = iterator.next();            if (next.getItemType() != TYPE_MY_CHANNEL)                iterator.remove();        }        Intent data = new Intent();        data.putExtra(Constant.DATA, (Serializable) mDatas);        setResult(RESULT_OK, data);        finish();    }    @Override    public void onStarDrag(BaseViewHolder baseViewHolder) {        //开始拖动//        Logger.i("开始拖动");        mHelper.startDrag(baseViewHolder);    }    @Override    public void onItemMove(int starPos, int endPos) {//        if (starPos < 0||endPos<0) return;        Channel startChannel = mDatas.get(starPos);        //先删除之前的位置        mDatas.remove(starPos);        //添加到现在的位置        mDatas.add(endPos, startChannel);        mAdapter.notifyItemMoved(starPos, endPos);    }    @Override    public void onMoveToMyChannel(int starPos, int endPos) {    }    @Override    public void onMoveToOtherChannel(int starPos, int endPos) {    }}