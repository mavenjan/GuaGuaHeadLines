package com.nxt.maven.guaguaheadlines.home;import android.annotation.SuppressLint;import android.content.Context;import android.content.Intent;import android.net.Uri;import android.os.Bundle;import android.support.design.widget.CoordinatorLayout;import android.support.design.widget.NavigationView;import android.support.design.widget.Snackbar;import android.support.design.widget.TabLayout;import android.support.v4.content.ContextCompat;import android.support.v4.view.ViewPager;import android.support.v4.widget.DrawerLayout;import android.support.v7.app.AppCompatActivity;import android.support.v7.appcompat.BuildConfig;import android.util.Log;import android.view.MenuItem;import android.view.View;import android.widget.Toast;import com.nxt.maven.guaguaheadlines.R;import com.nxt.maven.guaguaheadlines.app.MyApplication;import com.nxt.maven.guaguaheadlines.home.adapter.TestFragmentAdapter;import com.nxt.maven.guaguaheadlines.home.behavior.TestFragment;import com.nxt.maven.guaguaheadlines.home.behavior.uc.UcNewsHeaderPagerBehavior;import org.zackratos.ultimatebar.UltimateBar;import java.util.ArrayList;import java.util.List;/** * Created by Jan Maven on 2017/7/17. * Email:cyjiang_11@163.com * Description: */public class MainActivity extends AppCompatActivity implements TabLayout.OnTabSelectedListener,        UcNewsHeaderPagerBehavior.OnPagerStateListener {    private static final String TAG = "MainActivity";    private ViewPager mNewsPager;    private TabLayout mTableLayout;    private List<TestFragment> mFragments;    private UcNewsHeaderPagerBehavior mPagerBehavior;    private DrawerLayout mDrawerLayout;    private NavigationView mNavigationView;    public static Intent newIntent(Context context) {        Intent intent = new Intent(context, MainActivity.class);        return intent;    }    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        UltimateBar ultimateBar = new UltimateBar(this);        ultimateBar.setColorBarForDrawer(ContextCompat.getColor(this, R.color.colorPrimary),10);        mDrawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);        mNavigationView = (NavigationView) findViewById(R.id.navigation_view);        setupDrawerContent(mNavigationView);        initView();    }    @SuppressLint("WrongViewCast")    protected void initView() {        findViewById(R.id.iv_github).setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                openMyGitHub();            }        });        mPagerBehavior = (UcNewsHeaderPagerBehavior) ((CoordinatorLayout.LayoutParams) findViewById(R.id.id_uc_news_header_pager).getLayoutParams()).getBehavior();        mPagerBehavior.setPagerStateListener(this);        mNewsPager = (ViewPager) findViewById(R.id.id_uc_news_content);        mTableLayout = (TabLayout) findViewById(R.id.id_uc_news_tab);        mFragments = new ArrayList<TestFragment>();        for (int i = 0; i < 4; i++) {            mFragments.add(TestFragment.newInstance(String.valueOf(i), false));            mTableLayout.addTab(mTableLayout.newTab().setText("Tab" + i));        }        mTableLayout.setTabMode(TabLayout.MODE_FIXED);        mTableLayout.setOnTabSelectedListener(this);        mNewsPager.addOnPageChangeListener(new TabLayout.TabLayoutOnPageChangeListener(mTableLayout));        mNewsPager.setAdapter(new TestFragmentAdapter(mFragments, getSupportFragmentManager()));    }    private void openMyGitHub() {        Uri uri = Uri.parse("https://github.com/BCsl");        Intent it = new Intent(Intent.ACTION_VIEW, uri);        startActivity(it);    }    private void setupDrawerContent(NavigationView navigationView) {        navigationView.setNavigationItemSelectedListener(                new NavigationView.OnNavigationItemSelectedListener() {                    @Override                    public boolean onNavigationItemSelected(MenuItem menuItem) {//                        mMainPresenter.switchNavigation(menuItem.getItemId());//                        menuItem.setChecked(true);                        mDrawerLayout.closeDrawers();                        return true;                    }                });    }    @Override    public void onTabSelected(TabLayout.Tab tab) {        mNewsPager.setCurrentItem(tab.getPosition());    }    @Override    public void onTabUnselected(TabLayout.Tab tab) {    }    @Override    public void onTabReselected(TabLayout.Tab tab) {    }    @Override    public void onPagerClosed() {        if (BuildConfig.DEBUG) {            Log.d(TAG, "onPagerClosed: ");        }//        Snackbar.make(mNewsPager, "pager closed", Snackbar.LENGTH_SHORT).show();    }    @Override    public void onPagerOpened() {//        Snackbar.make(mNewsPager, "pager opened", Snackbar.LENGTH_SHORT).show();    }    private long exitTime;    @Override    public void onBackPressed() {        if (mDrawerLayout.isDrawerOpen(mNavigationView)){            mDrawerLayout.closeDrawers();        }else {            if (mPagerBehavior != null && mPagerBehavior.isClosed()) {                mPagerBehavior.openPager();            } else {                if ((System.currentTimeMillis() - exitTime) > 2000) {                    Toast.makeText(getApplicationContext(), getString(R.string.exit_notice),                            Toast.LENGTH_SHORT).show();                    exitTime = System.currentTimeMillis();                } else {                    MyApplication.getAppContext().exit();                    finish();                }//            super.onBackPressed();            }        }    }}